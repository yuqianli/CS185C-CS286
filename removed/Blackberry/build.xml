<project name="Cinequest" default="build">
   <property name="build.dir" value="build" />

   <target name="init">
      <property file="build.properties" />
      <fail unless="jde.home" message="Set jde.home in build.properties"/>
      <fail unless="junit3.home" message="Set junit3.home in build.properties"/>
      <fail unless="bb-ant-tools.home" message="Set bb-ant-tools.home in build.properties"/>

      <property name="test.results" value="${build.dir}/testresults" />
      <property name="src.dir" value="src" />
      <property name="common-src.dir" value="../JavaCommon/src" />
      <property name="images.dir" value="images" />
      <property name="build.dir" value="build" />
      <property name="test.dir" value="../JavaCommonTest/test" />
      <property name="javadoc.dir" value="javadoc" />
      <property name="javadoc.title" value="Cinequest BlackBerry API" />
      <property name="simulator.dir" value="${jde.home}/simulator" />
      
      <tstamp>
         <format property="build.time" pattern="yyyy-MM-dd HH:mm" />
         <format property="build.time.num" pattern="MMddHHmm" />
      </tstamp>

      <mkdir dir="${build.dir}" />
      <delete dir="${test.results}" quiet="true" />
      <echo message="${bb-ant-tools.home}/bb-ant-tools.jar"/>
      <taskdef resource="bb-ant-defs.xml">
         <classpath> 
            <pathelement location="${bb-ant-tools.home}/bb-ant-tools.jar"/> 
         </classpath>
      </taskdef>
   </target>

	<target name="build" depends="clean,init">
		<rapc output="${cod.name}" destdir="${build.dir}" quiet="true">
			<src>
				<fileset dir="${src.dir}">
					<include name="**/*.java" />
                                        <exclude name="net/rim/**" />
				</fileset>
				<fileset dir="${common-src.dir}">
					<include name="**/*.java" />
                                        <exclude name="net/rim/**" />
				</fileset>
				<fileset dir="${images.dir}">
					<include name="**/*.png" />
				</fileset>
			</src>

			<jdp title="${app.title} ${build.time}" vendor="${app.vendor}" version="${app.version}.${build.time.num}" description="${app.desc} (Build ${build.time})" icon="../images/appicon.png" />
		</rapc>
	</target>

	<target name="test" depends="clean,init">
		<javac destdir="${build.dir}" source="1.4" target="1.4" listfiles="yes">
			<src>
				<pathelement location="${common-src.dir}"/>
				<pathelement location="${test.dir}"/>
				<pathelement location="fake-rim"/>
			</src>
			<classpath>
				<pathelement location="${junit3.home}/junit.jar" />
			</classpath>
		</javac>
		<mkdir dir="${test.results}" />
		<junit>
			<classpath>
				<pathelement location="${build.dir}" />
				<pathelement location="${junit3.home}/junit.jar" />
			</classpath>

			<formatter type="plain" />

			<batchtest todir="${test.results}">
				<fileset dir="${test.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="javadoc">
		<mkdir dir="${javadoc.dir}" />
		<javadoc access="public" destdir="${javadoc.dir}" author="true" version="true" use="true" windowtitle="${javadoc.title}" classpath="${jde.home}/lib/net_rim_api.jar">
			<link href="http://www.blackberry.com/developers/docs/4.1api/" />
			<fileset dir="${src.dir}" defaultexcludes="yes">
				<include name="**/*.java" />
                                        <exclude name="net/rim/**" />

			</fileset>
			<fileset dir="${common-src.dir}" defaultexcludes="yes">
				<include name="**/*.java" />
                                        <exclude name="net/rim/**" />

			</fileset>
		</javadoc>
	</target>

	<target name="javadoc-upload" depends="javadoc">
		<scp trust="true" password="${oslo.pass}" todir="${oslo.user}@${oslo.host}:${oslo.dir}/javadoc">
			<fileset dir="${javadoc.dir}" />
		</scp>
		<delete dir="${javadoc.dir}" />
	</target>

	<target name="upload" depends="build">
		<scp trust="true" password="${oslo.pass}" todir="${oslo.user}@${oslo.host}:${oslo.coddir}">
			<fileset dir="${build.dir}" includes="cinequest.*" />
		</scp>
	</target>

	<!-- Win32
	<target name="load-simulator" depends="build">
		<copy todir="${simulator.dir}">
			<fileset dir="${build.dir}" includes="*.cod,*.csl,*.cso,*.debug,*.jar" />
		</copy>
	</target>
-->

	<!-- Win32
	<target name="load-device" depends="sign">
		<exec executable="${jde.home}/bin/JavaLoader.exe">
			<arg value="-usb" />
			<arg value="load" />
			<arg file="${build.dir}/${cod.name}.cod" />
		</exec>
	</target>
-->

	<target name="findbugs" depends="clean,init">
		<javac srcdir="${src.dir}" destdir="${build.dir}" source="1.4" target="1.4" listfiles="yes" classpath="${jde.home}/lib/net_rim_api.jar" />			
		<javac srcdir="${common-src.dir}" destdir="${build.dir}" source="1.4" target="1.4" listfiles="yes" />			
		<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" />
		<findbugs home="${env.FINDBUGS_HOME}" output="text">
			<class location="${build.dir}" />
			<sourcePath path="${basedir}/src/java" />
			<auxClasspath path="${jde.home}/lib/net_rim_api.jar" />
		</findbugs>
	</target>

	<target name="ncss">
		<path id="ncss.classpath">
			<fileset dir="${env.NCSS_HOME}" includes="**/*.jar" />
		</path>
		<path id="antcount.classpath">
			<fileset dir="${env.NCSS_HOME}" includes="antcount.jar" />
		</path>
		<typedef name="countfilter" classname="net.sf.antcount.filters.CountFilter" classpathref="antcount.classpath" />
		<taskdef name="javancss" classname="javancss.JavancssAntTask" classpathref="ncss.classpath" />
		<taskdef name="scan" classname="net.sf.antcount.tasks.Scan" classpathref="antcount.classpath" />

		<scan>
			<fileset dir="${src.dir}" includes="**/*.java" />
			<fileset dir="${common-src.dir}" includes="**/*.java" />
			<filterchain>
				<countfilter property="loc" />
			</filterchain>
		</scan>

		<javancss srcdir="${src.dir}" abortOnFail="false" generateReport="true" includes="**/*.java" />
		<javancss srcdir="${common-src.dir}" abortOnFail="false" generateReport="true" includes="**/*.java" />

		<echo message="LOC = ${loc}" />
	</target>

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="dist-clean" depends="clean">
		<delete dir="${javadoc.dir}" />
	</target>

    <target name="count-loc">
		<path id="antcount.classpath">
			<fileset dir="${env.NCSS_HOME}" includes="antcount.jar" />
		</path>
        <typedef name="countfilter" classname="net.sf.antcount.filters.CountFilter"  classpathref="antcount.classpath" />
        <taskdef name="scan" classname="net.sf.antcount.tasks.Scan"  classpathref="antcount.classpath"/>

        <scan>
            <fileset dir=".">
            	<include name="src/**/*.java"/>
            	<include name="test/**/*.java"/>
            </fileset>
            <filterchain>
                <countfilter property="src.loc" />
            </filterchain>
        </scan>
        <echo message="LOC = ${src.loc}" />
    </target>
	
	
</project>
